# ===============================
# = DATA SOURCE
# ===============================

# Connection url for the database
spring.datasource.url=jdbc:mysql://localhost:3306/filmy
#Username
spring.datasource.username=root
#Password
spring.datasource.password=*Dusanmysql11*
#Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect


# ===============================
# = JPA / HIBERNATE
# ===============================

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#You must begin with either create or update, because you do not yet have the database structure.
#After the first run, you can switch it to update or none, according to program requirements.
# Use update when you want to make some change to the database structure

#spring.jpa.hibernate.ddl-auto=create-drop
#Only checks if the Schema matches the Entities.
# If the schema doesnt match, then the application startup will fail. Makes no changes to the database.
spring.jpa.hibernate.ddl-auto=none

# Show or not log for each sql query
spring.jpa.show-sql=true

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=true

spring.jpa.properties.hibernate.format_sql=true




# ===============================
# = LOGGING
# ===============================

# logging level
#logging.level.org.springframework=ERROR
#logging.level.com.dusanweb.filmy=DEBUG

# output to a file
#logging.file=filmy.log

#logging.pattern.file=%d %p %c{1.} [%t] %m%n

